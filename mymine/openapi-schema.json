{
  "openapi": "3.0.3",
  "info": {
    "title": "MyMine Gold Mining Management API",
    "version": "1.0.0",
    "description": "API for comprehensive gold mining operations management"
  },
  "paths": {
    "/accounts/profile/": {
      "get": {
        "operationId": "accounts_profile_retrieve",
        "description": "User profile retrieval and update view",
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "accounts_profile_update",
        "description": "User profile retrieval and update view",
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "accounts_profile_partial_update",
        "description": "User profile retrieval and update view",
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserProfileRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserProfileRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/logout/": {
      "post": {
        "operationId": "api_logout_create",
        "description": "Logout user and blacklist refresh token",
        "tags": [
          "api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/profile/": {
      "get": {
        "operationId": "api_profile_retrieve",
        "description": "User profile retrieval and update view",
        "tags": [
          "api"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "api_profile_update",
        "description": "User profile retrieval and update view",
        "tags": [
          "api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "api_profile_partial_update",
        "description": "User profile retrieval and update view",
        "tags": [
          "api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserProfileRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserProfileRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserProfileRequest"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/register/": {
      "post": {
        "operationId": "api_register_create",
        "description": "User registration view\nAllows creating new user accounts with role-based access",
        "tags": [
          "api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistration"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/schema/": {
      "get": {
        "operationId": "api_schema_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "yaml"
              ]
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "af",
                "ar",
                "ar-dz",
                "ast",
                "az",
                "be",
                "bg",
                "bn",
                "br",
                "bs",
                "ca",
                "ckb",
                "cs",
                "cy",
                "da",
                "de",
                "dsb",
                "el",
                "en",
                "en-au",
                "en-gb",
                "eo",
                "es",
                "es-ar",
                "es-co",
                "es-mx",
                "es-ni",
                "es-ve",
                "et",
                "eu",
                "fa",
                "fi",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "he",
                "hi",
                "hr",
                "hsb",
                "hu",
                "hy",
                "ia",
                "id",
                "ig",
                "io",
                "is",
                "it",
                "ja",
                "ka",
                "kab",
                "kk",
                "km",
                "kn",
                "ko",
                "ky",
                "lb",
                "lt",
                "lv",
                "mk",
                "ml",
                "mn",
                "mr",
                "ms",
                "my",
                "nb",
                "ne",
                "nl",
                "nn",
                "os",
                "pa",
                "pl",
                "pt",
                "pt-br",
                "ro",
                "ru",
                "sk",
                "sl",
                "sq",
                "sr",
                "sr-latn",
                "sv",
                "sw",
                "ta",
                "te",
                "tg",
                "th",
                "tk",
                "tr",
                "tt",
                "udm",
                "ug",
                "uk",
                "ur",
                "uz",
                "vi",
                "zh-hans",
                "zh-hant"
              ]
            }
          }
        ],
        "tags": [
          "api"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/token/": {
      "post": {
        "operationId": "api_token_create",
        "description": "Custom token obtain view to provide additional user context",
        "tags": [
          "api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomTokenObtainPairRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CustomTokenObtainPairRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CustomTokenObtainPairRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/token/refresh/": {
      "post": {
        "operationId": "api_token_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "tags": [
          "api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/token/verify/": {
      "post": {
        "operationId": "api_token_verify_create",
        "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
        "tags": [
          "api"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CustomTokenObtainPairRequest": {
        "type": "object",
        "description": "Custom token serializer to include additional user information",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "password",
          "username"
        ]
      },
      "PatchedUserProfileRequest": {
        "type": "object",
        "description": "Serializer for user profile details",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          }
        }
      },
      "RoleEnum": {
        "enum": [
          "admin",
          "manager",
          "supervisor",
          "operator",
          "safety_officer",
          "analyst"
        ],
        "type": "string",
        "description": "* `admin` - Administrator\n* `manager` - Mine Manager\n* `supervisor` - Shift Supervisor\n* `operator` - Equipment Operator\n* `safety_officer` - Safety Officer\n* `analyst` - Data Analyst"
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string"
          }
        },
        "required": [
          "access",
          "refresh"
        ]
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "refresh"
        ]
      },
      "TokenVerifyRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "token"
        ]
      },
      "UserProfile": {
        "type": "object",
        "description": "Serializer for user profile details",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          },
          "department_name": {
            "type": "string",
            "readOnly": true
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "date_joined",
          "department_name",
          "email",
          "id",
          "last_login",
          "username"
        ]
      },
      "UserProfileRequest": {
        "type": "object",
        "description": "Serializer for user profile details",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          }
        },
        "required": [
          "email",
          "username"
        ]
      },
      "UserRegistration": {
        "type": "object",
        "description": "Serializer for user registration",
        "properties": {
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          },
          "department_name": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "department_name",
          "email",
          "username"
        ]
      },
      "UserRegistrationRequest": {
        "type": "object",
        "description": "Serializer for user registration",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "title": "Email address",
            "maxLength": 254
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "confirm_password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          }
        },
        "required": [
          "confirm_password",
          "email",
          "password",
          "username"
        ]
      }
    },
    "securitySchemes": {
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}