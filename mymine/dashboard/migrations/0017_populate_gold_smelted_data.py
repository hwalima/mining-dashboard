# Generated by Django 5.1.4 on 2024-12-13 02:05

from django.db import migrations
from decimal import Decimal
import random

def populate_gold_smelted(apps, schema_editor):
    ProductionMetrics = apps.get_model('dashboard', 'ProductionMetrics')
    
    # Update all existing records
    for metric in ProductionMetrics.objects.all():
        # Calculate gold smelted based on tonnage and recovery rate
        # Assuming average grade of 2.5g/t and applying recovery rate
        tonnage = float(metric.total_tonnage_crushed)
        recovery_rate = float(metric.gold_recovery_rate)
        
        # Calculate theoretical gold content (2.5g/t average grade)
        theoretical_gold = tonnage * 2.5
        
        # Apply recovery rate and add some random variation (Â±5%)
        variation = random.uniform(0.95, 1.05)
        gold_smelted = theoretical_gold * (recovery_rate / 100) * variation
        
        # Update the record
        metric.gold_smelted = Decimal(str(round(gold_smelted, 2)))
        metric.save()

def reverse_populate(apps, schema_editor):
    ProductionMetrics = apps.get_model('dashboard', 'ProductionMetrics')
    ProductionMetrics.objects.all().update(gold_smelted=0)

class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0016_productionmetrics_gold_smelted'),
    ]

    operations = [
        migrations.RunPython(populate_gold_smelted, reverse_populate),
    ]
